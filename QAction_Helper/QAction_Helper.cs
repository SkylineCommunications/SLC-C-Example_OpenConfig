// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	/// <summary>PID: 2 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int afterstartup_2 = 2;
	/// <summary>PID: 2 | Type: read</summary>
	public const int afterstartup = 2;
	/// <summary>PID: 3 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pollunsubscribeddata_3 = 3;
	/// <summary>PID: 3 | Type: read</summary>
	public const int pollunsubscribeddata = 3;
	/// <summary>PID: 10 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int datasourceip_10 = 10;
	/// <summary>PID: 10 | Type: read</summary>
	public const int datasourceip = 10;
	/// <summary>PID: 12 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int datasourceport_12 = 12;
	/// <summary>PID: 12 | Type: read</summary>
	public const int datasourceport = 12;
	/// <summary>PID: 14 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int datasourceusername_14 = 14;
	/// <summary>PID: 14 | Type: read</summary>
	public const int datasourceusername = 14;
	/// <summary>PID: 16 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int datasourcepassword_16 = 16;
	/// <summary>PID: 16 | Type: read</summary>
	public const int datasourcepassword = 16;
	/// <summary>PID: 18 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int clientcertificate_18 = 18;
	/// <summary>PID: 18 | Type: read</summary>
	public const int clientcertificate = 18;
	/// <summary>PID: 22 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int grpcconnectionstate_22 = 22;
	/// <summary>PID: 22 | Type: read</summary>
	public const int grpcconnectionstate = 22;
	/// <summary>PID: 102 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int gnmiversion_102 = 102;
	/// <summary>PID: 102 | Type: read</summary>
	public const int gnmiversion = 102;
	/// <summary>PID: 406 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int systemstatecurrentdatetime_406 = 406;
	/// <summary>PID: 406 | Type: read</summary>
	public const int systemstatecurrentdatetime = 406;
	/// <summary>PID: 408 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int systemstateloginbanner_408 = 408;
	/// <summary>PID: 408 | Type: read</summary>
	public const int systemstateloginbanner = 408;
	/// <summary>PID: 410 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int systemstatemotdbanner_410 = 410;
	/// <summary>PID: 410 | Type: read</summary>
	public const int systemstatemotdbanner = 410;
	/// <summary>PID: 3000 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int openflowdatapathid_3000 = 3000;
	/// <summary>PID: 3000 | Type: read</summary>
	public const int openflowdatapathid = 3000;
	/// <summary>PID: 3001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int openflowfailuremode_3001 = 3001;
	/// <summary>PID: 3001 | Type: read</summary>
	public const int openflowfailuremode = 3001;
	/// <summary>PID: 3002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int openflowbackoffinterval_3002 = 3002;
	/// <summary>PID: 3002 | Type: read</summary>
	public const int openflowbackoffinterval = 3002;
	/// <summary>PID: 3003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int openflowmaxbackoff_3003 = 3003;
	/// <summary>PID: 3003 | Type: read</summary>
	public const int openflowmaxbackoff = 3003;
	/// <summary>PID: 3004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int openflowinactivityprobe_3004 = 3004;
	/// <summary>PID: 3004 | Type: read</summary>
	public const int openflowinactivityprobe = 3004;
	public class Write
	{
		/// <summary>PID: 11 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int datasourceip_11 = 11;
		/// <summary>PID: 11 | Type: write</summary>
		public const int datasourceip = 11;
		/// <summary>PID: 13 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int datasourceport_13 = 13;
		/// <summary>PID: 13 | Type: write</summary>
		public const int datasourceport = 13;
		/// <summary>PID: 15 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int datasourceusername_15 = 15;
		/// <summary>PID: 15 | Type: write</summary>
		public const int datasourceusername = 15;
		/// <summary>PID: 17 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int datasourcepassword_17 = 17;
		/// <summary>PID: 17 | Type: write</summary>
		public const int datasourcepassword = 17;
		/// <summary>PID: 19 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int clientcertificate_19 = 19;
		/// <summary>PID: 19 | Type: write</summary>
		public const int clientcertificate = 19;
		/// <summary>PID: 409 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int systemstateloginbanner_409 = 409;
		/// <summary>PID: 409 | Type: write</summary>
		public const int systemstateloginbanner = 409;
		/// <summary>PID: 411 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int systemstatemotdbanner_411 = 411;
		/// <summary>PID: 411 | Type: write</summary>
		public const int systemstatemotdbanner = 411;
	}
	public class Capabilitiesmodelstable
	{
		/// <summary>PID: 500</summary>
		public const int tablePid = 500;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 501</summary>
		public const int indexColumnPid = 501;
		public class Pid
		{
			/// <summary>PID: 501 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int capabilitiesmodelstablekey_501 = 501;
			/// <summary>PID: 501 | Type: read</summary>
			public const int capabilitiesmodelstablekey = 501;
			/// <summary>PID: 502 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int capabilitiesmodelstablename_502 = 502;
			/// <summary>PID: 502 | Type: read</summary>
			public const int capabilitiesmodelstablename = 502;
			/// <summary>PID: 503 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int capabilitiesmodelstableversion_503 = 503;
			/// <summary>PID: 503 | Type: read</summary>
			public const int capabilitiesmodelstableversion = 503;
			/// <summary>PID: 504 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int capabilitiesmodelstableorganization_504 = 504;
			/// <summary>PID: 504 | Type: read</summary>
			public const int capabilitiesmodelstableorganization = 504;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int capabilitiesmodelstablekey_501 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int capabilitiesmodelstablekey = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int capabilitiesmodelstablename_502 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int capabilitiesmodelstablename = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int capabilitiesmodelstableversion_503 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int capabilitiesmodelstableversion = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int capabilitiesmodelstableorganization_504 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int capabilitiesmodelstableorganization = 3;
		}
	}
	public class Interfacesstate
	{
		/// <summary>PID: 2000</summary>
		public const int tablePid = 2000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 2001</summary>
		public const int indexColumnPid = 2001;
		public class Pid
		{
			/// <summary>PID: 2001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatename_2001 = 2001;
			/// <summary>PID: 2001 | Type: read</summary>
			public const int interfacesstatename = 2001;
			/// <summary>PID: 2002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatetype_2002 = 2002;
			/// <summary>PID: 2002 | Type: read</summary>
			public const int interfacesstatetype = 2002;
			/// <summary>PID: 2003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatemtu_2003 = 2003;
			/// <summary>PID: 2003 | Type: read</summary>
			public const int interfacesstatemtu = 2003;
			/// <summary>PID: 2004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateloopbackmode_2004 = 2004;
			/// <summary>PID: 2004 | Type: read</summary>
			public const int interfacesstateloopbackmode = 2004;
			/// <summary>PID: 2005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatedescription_2005 = 2005;
			/// <summary>PID: 2005 | Type: read</summary>
			public const int interfacesstatedescription = 2005;
			/// <summary>PID: 2006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatestate_2006 = 2006;
			/// <summary>PID: 2006 | Type: read</summary>
			public const int interfacesstatestate = 2006;
			/// <summary>PID: 2007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateifindex_2007 = 2007;
			/// <summary>PID: 2007 | Type: read</summary>
			public const int interfacesstateifindex = 2007;
			/// <summary>PID: 2008 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateadminstatus_2008 = 2008;
			/// <summary>PID: 2008 | Type: read</summary>
			public const int interfacesstateadminstatus = 2008;
			/// <summary>PID: 2009 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoperstatus_2009 = 2009;
			/// <summary>PID: 2009 | Type: read</summary>
			public const int interfacesstateoperstatus = 2009;
			/// <summary>PID: 2010 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatelastchange_2010 = 2010;
			/// <summary>PID: 2010 | Type: read</summary>
			public const int interfacesstatelastchange = 2010;
			/// <summary>PID: 2011 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatelogical_2011 = 2011;
			/// <summary>PID: 2011 | Type: read</summary>
			public const int interfacesstatelogical = 2011;
			/// <summary>PID: 2012 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinoctets_2012 = 2012;
			/// <summary>PID: 2012 | Type: read</summary>
			public const int interfacesstateinoctets = 2012;
			/// <summary>PID: 2013 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinpckts_2013 = 2013;
			/// <summary>PID: 2013 | Type: read</summary>
			public const int interfacesstateinpckts = 2013;
			/// <summary>PID: 2014 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinunicastpckts_2014 = 2014;
			/// <summary>PID: 2014 | Type: read</summary>
			public const int interfacesstateinunicastpckts = 2014;
			/// <summary>PID: 2015 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinbroadcastpckts_2015 = 2015;
			/// <summary>PID: 2015 | Type: read</summary>
			public const int interfacesstateinbroadcastpckts = 2015;
			/// <summary>PID: 2016 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinmulticastpckts_2016 = 2016;
			/// <summary>PID: 2016 | Type: read</summary>
			public const int interfacesstateinmulticastpckts = 2016;
			/// <summary>PID: 2017 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateindiscards_2017 = 2017;
			/// <summary>PID: 2017 | Type: read</summary>
			public const int interfacesstateindiscards = 2017;
			/// <summary>PID: 2018 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinerrors_2018 = 2018;
			/// <summary>PID: 2018 | Type: read</summary>
			public const int interfacesstateinerrors = 2018;
			/// <summary>PID: 2019 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinunknownprotos_2019 = 2019;
			/// <summary>PID: 2019 | Type: read</summary>
			public const int interfacesstateinunknownprotos = 2019;
			/// <summary>PID: 2020 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinfcserrors_2020 = 2020;
			/// <summary>PID: 2020 | Type: read</summary>
			public const int interfacesstateinfcserrors = 2020;
			/// <summary>PID: 2021 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutoctets_2021 = 2021;
			/// <summary>PID: 2021 | Type: read</summary>
			public const int interfacesstateoutoctets = 2021;
			/// <summary>PID: 2022 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutpckts_2022 = 2022;
			/// <summary>PID: 2022 | Type: read</summary>
			public const int interfacesstateoutpckts = 2022;
			/// <summary>PID: 2023 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutunicastpckts_2023 = 2023;
			/// <summary>PID: 2023 | Type: read</summary>
			public const int interfacesstateoutunicastpckts = 2023;
			/// <summary>PID: 2024 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutbroadcastpckts_2024 = 2024;
			/// <summary>PID: 2024 | Type: read</summary>
			public const int interfacesstateoutbroadcastpckts = 2024;
			/// <summary>PID: 2025 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutmulticastpckts_2025 = 2025;
			/// <summary>PID: 2025 | Type: read</summary>
			public const int interfacesstateoutmulticastpckts = 2025;
			/// <summary>PID: 2026 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutdiscards_2026 = 2026;
			/// <summary>PID: 2026 | Type: read</summary>
			public const int interfacesstateoutdiscards = 2026;
			/// <summary>PID: 2027 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateouterrors_2027 = 2027;
			/// <summary>PID: 2027 | Type: read</summary>
			public const int interfacesstateouterrors = 2027;
			/// <summary>PID: 2028 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatecarriertransitions_2028 = 2028;
			/// <summary>PID: 2028 | Type: read</summary>
			public const int interfacesstatecarriertransitions = 2028;
			/// <summary>PID: 2029 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatelastclear_2029 = 2029;
			/// <summary>PID: 2029 | Type: read</summary>
			public const int interfacesstatelastclear = 2029;
			/// <summary>PID: 2030 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatedisplaykey_2030 = 2030;
			/// <summary>PID: 2030 | Type: read</summary>
			public const int interfacesstatedisplaykey = 2030;
			/// <summary>PID: 2031 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinbitrate_2031 = 2031;
			/// <summary>PID: 2031 | Type: read</summary>
			public const int interfacesstateinbitrate = 2031;
			/// <summary>PID: 2032 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutbitrate_2032 = 2032;
			/// <summary>PID: 2032 | Type: read</summary>
			public const int interfacesstateoutbitrate = 2032;
			/// <summary>PID: 2033 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinerrorrate_2033 = 2033;
			/// <summary>PID: 2033 | Type: read</summary>
			public const int interfacesstateinerrorrate = 2033;
			/// <summary>PID: 2034 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateouterrorrate_2034 = 2034;
			/// <summary>PID: 2034 | Type: read</summary>
			public const int interfacesstateouterrorrate = 2034;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatename_2001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int interfacesstatename = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatetype_2002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int interfacesstatetype = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatemtu_2003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int interfacesstatemtu = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateloopbackmode_2004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int interfacesstateloopbackmode = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatedescription_2005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int interfacesstatedescription = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatestate_2006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int interfacesstatestate = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateifindex_2007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int interfacesstateifindex = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateadminstatus_2008 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int interfacesstateadminstatus = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoperstatus_2009 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int interfacesstateoperstatus = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatelastchange_2010 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int interfacesstatelastchange = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatelogical_2011 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int interfacesstatelogical = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinoctets_2012 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int interfacesstateinoctets = 11;
			/// <summary>IDX: 12 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinpckts_2013 = 12;
			/// <summary>IDX: 12 | Type: read</summary>
			public const int interfacesstateinpckts = 12;
			/// <summary>IDX: 13 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinunicastpckts_2014 = 13;
			/// <summary>IDX: 13 | Type: read</summary>
			public const int interfacesstateinunicastpckts = 13;
			/// <summary>IDX: 14 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinbroadcastpckts_2015 = 14;
			/// <summary>IDX: 14 | Type: read</summary>
			public const int interfacesstateinbroadcastpckts = 14;
			/// <summary>IDX: 15 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinmulticastpckts_2016 = 15;
			/// <summary>IDX: 15 | Type: read</summary>
			public const int interfacesstateinmulticastpckts = 15;
			/// <summary>IDX: 16 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateindiscards_2017 = 16;
			/// <summary>IDX: 16 | Type: read</summary>
			public const int interfacesstateindiscards = 16;
			/// <summary>IDX: 17 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinerrors_2018 = 17;
			/// <summary>IDX: 17 | Type: read</summary>
			public const int interfacesstateinerrors = 17;
			/// <summary>IDX: 18 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinunknownprotos_2019 = 18;
			/// <summary>IDX: 18 | Type: read</summary>
			public const int interfacesstateinunknownprotos = 18;
			/// <summary>IDX: 19 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinfcserrors_2020 = 19;
			/// <summary>IDX: 19 | Type: read</summary>
			public const int interfacesstateinfcserrors = 19;
			/// <summary>IDX: 20 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutoctets_2021 = 20;
			/// <summary>IDX: 20 | Type: read</summary>
			public const int interfacesstateoutoctets = 20;
			/// <summary>IDX: 21 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutpckts_2022 = 21;
			/// <summary>IDX: 21 | Type: read</summary>
			public const int interfacesstateoutpckts = 21;
			/// <summary>IDX: 22 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutunicastpckts_2023 = 22;
			/// <summary>IDX: 22 | Type: read</summary>
			public const int interfacesstateoutunicastpckts = 22;
			/// <summary>IDX: 23 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutbroadcastpckts_2024 = 23;
			/// <summary>IDX: 23 | Type: read</summary>
			public const int interfacesstateoutbroadcastpckts = 23;
			/// <summary>IDX: 24 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutmulticastpckts_2025 = 24;
			/// <summary>IDX: 24 | Type: read</summary>
			public const int interfacesstateoutmulticastpckts = 24;
			/// <summary>IDX: 25 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutdiscards_2026 = 25;
			/// <summary>IDX: 25 | Type: read</summary>
			public const int interfacesstateoutdiscards = 25;
			/// <summary>IDX: 26 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateouterrors_2027 = 26;
			/// <summary>IDX: 26 | Type: read</summary>
			public const int interfacesstateouterrors = 26;
			/// <summary>IDX: 27 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatecarriertransitions_2028 = 27;
			/// <summary>IDX: 27 | Type: read</summary>
			public const int interfacesstatecarriertransitions = 27;
			/// <summary>IDX: 28 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatelastclear_2029 = 28;
			/// <summary>IDX: 28 | Type: read</summary>
			public const int interfacesstatelastclear = 28;
			/// <summary>IDX: 29 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstatedisplaykey_2030 = 29;
			/// <summary>IDX: 29 | Type: read</summary>
			public const int interfacesstatedisplaykey = 29;
			/// <summary>IDX: 30 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinbitrate_2031 = 30;
			/// <summary>IDX: 30 | Type: read</summary>
			public const int interfacesstateinbitrate = 30;
			/// <summary>IDX: 31 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateoutbitrate_2032 = 31;
			/// <summary>IDX: 31 | Type: read</summary>
			public const int interfacesstateoutbitrate = 31;
			/// <summary>IDX: 32 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateinerrorrate_2033 = 32;
			/// <summary>IDX: 32 | Type: read</summary>
			public const int interfacesstateinerrorrate = 32;
			/// <summary>IDX: 33 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesstateouterrorrate_2034 = 33;
			/// <summary>IDX: 33 | Type: read</summary>
			public const int interfacesstateouterrorrate = 33;
		}
	}
	public class Openflowmaincontrollerconnections
	{
		/// <summary>PID: 3100</summary>
		public const int tablePid = 3100;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 3101</summary>
		public const int indexColumnPid = 3101;
		public class Pid
		{
			/// <summary>PID: 3101 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionspk_3101 = 3101;
			/// <summary>PID: 3101 | Type: read</summary>
			public const int openflowmaincontrollerconnectionspk = 3101;
			/// <summary>PID: 3102 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionsauxiliaryid_3102 = 3102;
			/// <summary>PID: 3102 | Type: read</summary>
			public const int openflowmaincontrollerconnectionsauxiliaryid = 3102;
			/// <summary>PID: 3103 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionspriority_3103 = 3103;
			/// <summary>PID: 3103 | Type: read</summary>
			public const int openflowmaincontrollerconnectionspriority = 3103;
			/// <summary>PID: 3104 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionsipaddress_3104 = 3104;
			/// <summary>PID: 3104 | Type: read</summary>
			public const int openflowmaincontrollerconnectionsipaddress = 3104;
			/// <summary>PID: 3105 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionsport_3105 = 3105;
			/// <summary>PID: 3105 | Type: read</summary>
			public const int openflowmaincontrollerconnectionsport = 3105;
			/// <summary>PID: 3106 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionstransport_3106 = 3106;
			/// <summary>PID: 3106 | Type: read</summary>
			public const int openflowmaincontrollerconnectionstransport = 3106;
			/// <summary>PID: 3107 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionscertificateid_3107 = 3107;
			/// <summary>PID: 3107 | Type: read</summary>
			public const int openflowmaincontrollerconnectionscertificateid = 3107;
			/// <summary>PID: 3108 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionssourceinterface_3108 = 3108;
			/// <summary>PID: 3108 | Type: read</summary>
			public const int openflowmaincontrollerconnectionssourceinterface = 3108;
			/// <summary>PID: 3109 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionsstate_3109 = 3109;
			/// <summary>PID: 3109 | Type: read</summary>
			public const int openflowmaincontrollerconnectionsstate = 3109;
			/// <summary>PID: 3110 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionsdisplaykey_3110 = 3110;
			/// <summary>PID: 3110 | Type: read</summary>
			public const int openflowmaincontrollerconnectionsdisplaykey = 3110;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionspk_3101 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int openflowmaincontrollerconnectionspk = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionsauxiliaryid_3102 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int openflowmaincontrollerconnectionsauxiliaryid = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionspriority_3103 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int openflowmaincontrollerconnectionspriority = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionsipaddress_3104 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int openflowmaincontrollerconnectionsipaddress = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionsport_3105 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int openflowmaincontrollerconnectionsport = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionstransport_3106 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int openflowmaincontrollerconnectionstransport = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionscertificateid_3107 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int openflowmaincontrollerconnectionscertificateid = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionssourceinterface_3108 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int openflowmaincontrollerconnectionssourceinterface = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionsstate_3109 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int openflowmaincontrollerconnectionsstate = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowmaincontrollerconnectionsdisplaykey_3110 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int openflowmaincontrollerconnectionsdisplaykey = 9;
		}
	}
	public class Openflowsecondcontrollerconnectionspolled
	{
		/// <summary>PID: 3200</summary>
		public const int tablePid = 3200;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 3201</summary>
		public const int indexColumnPid = 3201;
		public class Pid
		{
			/// <summary>PID: 3201 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledpk_3201 = 3201;
			/// <summary>PID: 3201 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledpk = 3201;
			/// <summary>PID: 3202 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledauxiliaryid_3202 = 3202;
			/// <summary>PID: 3202 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledauxiliaryid = 3202;
			/// <summary>PID: 3203 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledpriority_3203 = 3203;
			/// <summary>PID: 3203 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledpriority = 3203;
			/// <summary>PID: 3204 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledipaddress_3204 = 3204;
			/// <summary>PID: 3204 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledipaddress = 3204;
			/// <summary>PID: 3205 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledport_3205 = 3205;
			/// <summary>PID: 3205 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledport = 3205;
			/// <summary>PID: 3206 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledtransport_3206 = 3206;
			/// <summary>PID: 3206 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledtransport = 3206;
			/// <summary>PID: 3207 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledcertificateid_3207 = 3207;
			/// <summary>PID: 3207 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledcertificateid = 3207;
			/// <summary>PID: 3208 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledsourceinterface_3208 = 3208;
			/// <summary>PID: 3208 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledsourceinterface = 3208;
			/// <summary>PID: 3209 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledstate_3209 = 3209;
			/// <summary>PID: 3209 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledstate = 3209;
			/// <summary>PID: 3210 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolleddisplaykey_3210 = 3210;
			/// <summary>PID: 3210 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolleddisplaykey = 3210;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledpk_3201 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledpk = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledauxiliaryid_3202 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledauxiliaryid = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledpriority_3203 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledpriority = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledipaddress_3204 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledipaddress = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledport_3205 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledport = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledtransport_3206 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledtransport = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledcertificateid_3207 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledcertificateid = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledsourceinterface_3208 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledsourceinterface = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolledstate_3209 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolledstate = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionspolleddisplaykey_3210 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionspolleddisplaykey = 9;
		}
	}
	public class Openflowsecondcontrollerconnectionssubscribed
	{
		/// <summary>PID: 3300</summary>
		public const int tablePid = 3300;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 3301</summary>
		public const int indexColumnPid = 3301;
		public class Pid
		{
			/// <summary>PID: 3301 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedpk_3301 = 3301;
			/// <summary>PID: 3301 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedpk = 3301;
			/// <summary>PID: 3302 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedauxiliaryid_3302 = 3302;
			/// <summary>PID: 3302 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedauxiliaryid = 3302;
			/// <summary>PID: 3303 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedpriority_3303 = 3303;
			/// <summary>PID: 3303 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedpriority = 3303;
			/// <summary>PID: 3304 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedipaddress_3304 = 3304;
			/// <summary>PID: 3304 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedipaddress = 3304;
			/// <summary>PID: 3305 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedport_3305 = 3305;
			/// <summary>PID: 3305 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedport = 3305;
			/// <summary>PID: 3306 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedtransport_3306 = 3306;
			/// <summary>PID: 3306 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedtransport = 3306;
			/// <summary>PID: 3307 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedcertificateid_3307 = 3307;
			/// <summary>PID: 3307 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedcertificateid = 3307;
			/// <summary>PID: 3308 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedsourceinterface_3308 = 3308;
			/// <summary>PID: 3308 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedsourceinterface = 3308;
			/// <summary>PID: 3309 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedstate_3309 = 3309;
			/// <summary>PID: 3309 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedstate = 3309;
			/// <summary>PID: 3310 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribeddisplaykey_3310 = 3310;
			/// <summary>PID: 3310 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribeddisplaykey = 3310;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedpk_3301 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedpk = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedauxiliaryid_3302 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedauxiliaryid = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedpriority_3303 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedpriority = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedipaddress_3304 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedipaddress = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedport_3305 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedport = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedtransport_3306 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedtransport = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedcertificateid_3307 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedcertificateid = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedsourceinterface_3308 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedsourceinterface = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribedstate_3309 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribedstate = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int openflowsecondcontrollerconnectionssubscribeddisplaykey_3310 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int openflowsecondcontrollerconnectionssubscribeddisplaykey = 9;
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 11  | Type: write</summary>
	public System.Object Datasourceip {get { return Protocol.GetParameter(11); }set { Protocol.SetParameter(11, value); }}
	/// <summary>PID: 13  | Type: write</summary>
	public System.Object Datasourceport {get { return Protocol.GetParameter(13); }set { Protocol.SetParameter(13, value); }}
	/// <summary>PID: 15  | Type: write</summary>
	public System.Object Datasourceusername {get { return Protocol.GetParameter(15); }set { Protocol.SetParameter(15, value); }}
	/// <summary>PID: 17  | Type: write</summary>
	public System.Object Datasourcepassword {get { return Protocol.GetParameter(17); }set { Protocol.SetParameter(17, value); }}
	/// <summary>PID: 19  | Type: write</summary>
	public System.Object Clientcertificate {get { return Protocol.GetParameter(19); }set { Protocol.SetParameter(19, value); }}
	/// <summary>PID: 409  | Type: write</summary>
	public System.Object Systemstateloginbanner {get { return Protocol.GetParameter(409); }set { Protocol.SetParameter(409, value); }}
	/// <summary>PID: 411  | Type: write</summary>
	public System.Object Systemstatemotdbanner {get { return Protocol.GetParameter(411); }set { Protocol.SetParameter(411, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 500</summary>
	CapabilitiesmodelstableQActionTable capabilitiesmodelstable { get; set; }
	/// <summary>PID: 2000</summary>
	InterfacesstateQActionTable interfacesstate { get; set; }
	/// <summary>PID: 3100</summary>
	OpenflowmaincontrollerconnectionsQActionTable openflowmaincontrollerconnections { get; set; }
	/// <summary>PID: 3200</summary>
	OpenflowsecondcontrollerconnectionspolledQActionTable openflowsecondcontrollerconnectionspolled { get; set; }
	/// <summary>PID: 3300</summary>
	OpenflowsecondcontrollerconnectionssubscribedQActionTable openflowsecondcontrollerconnectionssubscribed { get; set; }
	object Afterstartup_2 { get; set; }
	object Afterstartup { get; set; }
	object Pollunsubscribeddata_3 { get; set; }
	object Pollunsubscribeddata { get; set; }
	object Datasourceip_10 { get; set; }
	object Datasourceip { get; set; }
	object Datasourceip_11 { get; set; }
	object Datasourceport_12 { get; set; }
	object Datasourceport { get; set; }
	object Datasourceport_13 { get; set; }
	object Datasourceusername_14 { get; set; }
	object Datasourceusername { get; set; }
	object Datasourceusername_15 { get; set; }
	object Datasourcepassword_16 { get; set; }
	object Datasourcepassword { get; set; }
	object Datasourcepassword_17 { get; set; }
	object Clientcertificate_18 { get; set; }
	object Clientcertificate { get; set; }
	object Clientcertificate_19 { get; set; }
	object Grpcconnectionstate_22 { get; set; }
	object Grpcconnectionstate { get; set; }
	object Gnmiversion_102 { get; set; }
	object Gnmiversion { get; set; }
	object Systemstatecurrentdatetime_406 { get; set; }
	object Systemstatecurrentdatetime { get; set; }
	object Systemstateloginbanner_408 { get; set; }
	object Systemstateloginbanner { get; set; }
	object Systemstateloginbanner_409 { get; set; }
	object Systemstatemotdbanner_410 { get; set; }
	object Systemstatemotdbanner { get; set; }
	object Systemstatemotdbanner_411 { get; set; }
	object Capabilitiesmodelstablekey_501 { get; set; }
	object Capabilitiesmodelstablekey { get; set; }
	object Capabilitiesmodelstablename_502 { get; set; }
	object Capabilitiesmodelstablename { get; set; }
	object Capabilitiesmodelstableversion_503 { get; set; }
	object Capabilitiesmodelstableversion { get; set; }
	object Capabilitiesmodelstableorganization_504 { get; set; }
	object Capabilitiesmodelstableorganization { get; set; }
	object Interfacesstatename_2001 { get; set; }
	object Interfacesstatename { get; set; }
	object Interfacesstatetype_2002 { get; set; }
	object Interfacesstatetype { get; set; }
	object Interfacesstatemtu_2003 { get; set; }
	object Interfacesstatemtu { get; set; }
	object Interfacesstateloopbackmode_2004 { get; set; }
	object Interfacesstateloopbackmode { get; set; }
	object Interfacesstatedescription_2005 { get; set; }
	object Interfacesstatedescription { get; set; }
	object Interfacesstatestate_2006 { get; set; }
	object Interfacesstatestate { get; set; }
	object Interfacesstateifindex_2007 { get; set; }
	object Interfacesstateifindex { get; set; }
	object Interfacesstateadminstatus_2008 { get; set; }
	object Interfacesstateadminstatus { get; set; }
	object Interfacesstateoperstatus_2009 { get; set; }
	object Interfacesstateoperstatus { get; set; }
	object Interfacesstatelastchange_2010 { get; set; }
	object Interfacesstatelastchange { get; set; }
	object Interfacesstatelogical_2011 { get; set; }
	object Interfacesstatelogical { get; set; }
	object Interfacesstateinoctets_2012 { get; set; }
	object Interfacesstateinoctets { get; set; }
	object Interfacesstateinpckts_2013 { get; set; }
	object Interfacesstateinpckts { get; set; }
	object Interfacesstateinunicastpckts_2014 { get; set; }
	object Interfacesstateinunicastpckts { get; set; }
	object Interfacesstateinbroadcastpckts_2015 { get; set; }
	object Interfacesstateinbroadcastpckts { get; set; }
	object Interfacesstateinmulticastpckts_2016 { get; set; }
	object Interfacesstateinmulticastpckts { get; set; }
	object Interfacesstateindiscards_2017 { get; set; }
	object Interfacesstateindiscards { get; set; }
	object Interfacesstateinerrors_2018 { get; set; }
	object Interfacesstateinerrors { get; set; }
	object Interfacesstateinunknownprotos_2019 { get; set; }
	object Interfacesstateinunknownprotos { get; set; }
	object Interfacesstateinfcserrors_2020 { get; set; }
	object Interfacesstateinfcserrors { get; set; }
	object Interfacesstateoutoctets_2021 { get; set; }
	object Interfacesstateoutoctets { get; set; }
	object Interfacesstateoutpckts_2022 { get; set; }
	object Interfacesstateoutpckts { get; set; }
	object Interfacesstateoutunicastpckts_2023 { get; set; }
	object Interfacesstateoutunicastpckts { get; set; }
	object Interfacesstateoutbroadcastpckts_2024 { get; set; }
	object Interfacesstateoutbroadcastpckts { get; set; }
	object Interfacesstateoutmulticastpckts_2025 { get; set; }
	object Interfacesstateoutmulticastpckts { get; set; }
	object Interfacesstateoutdiscards_2026 { get; set; }
	object Interfacesstateoutdiscards { get; set; }
	object Interfacesstateouterrors_2027 { get; set; }
	object Interfacesstateouterrors { get; set; }
	object Interfacesstatecarriertransitions_2028 { get; set; }
	object Interfacesstatecarriertransitions { get; set; }
	object Interfacesstatelastclear_2029 { get; set; }
	object Interfacesstatelastclear { get; set; }
	object Interfacesstatedisplaykey_2030 { get; set; }
	object Interfacesstatedisplaykey { get; set; }
	object Interfacesstateinbitrate_2031 { get; set; }
	object Interfacesstateinbitrate { get; set; }
	object Interfacesstateoutbitrate_2032 { get; set; }
	object Interfacesstateoutbitrate { get; set; }
	object Interfacesstateinerrorrate_2033 { get; set; }
	object Interfacesstateinerrorrate { get; set; }
	object Interfacesstateouterrorrate_2034 { get; set; }
	object Interfacesstateouterrorrate { get; set; }
	object Openflowdatapathid_3000 { get; set; }
	object Openflowdatapathid { get; set; }
	object Openflowfailuremode_3001 { get; set; }
	object Openflowfailuremode { get; set; }
	object Openflowbackoffinterval_3002 { get; set; }
	object Openflowbackoffinterval { get; set; }
	object Openflowmaxbackoff_3003 { get; set; }
	object Openflowmaxbackoff { get; set; }
	object Openflowinactivityprobe_3004 { get; set; }
	object Openflowinactivityprobe { get; set; }
	object Openflowmaincontrollerconnectionspk_3101 { get; set; }
	object Openflowmaincontrollerconnectionspk { get; set; }
	object Openflowmaincontrollerconnectionsauxiliaryid_3102 { get; set; }
	object Openflowmaincontrollerconnectionsauxiliaryid { get; set; }
	object Openflowmaincontrollerconnectionspriority_3103 { get; set; }
	object Openflowmaincontrollerconnectionspriority { get; set; }
	object Openflowmaincontrollerconnectionsipaddress_3104 { get; set; }
	object Openflowmaincontrollerconnectionsipaddress { get; set; }
	object Openflowmaincontrollerconnectionsport_3105 { get; set; }
	object Openflowmaincontrollerconnectionsport { get; set; }
	object Openflowmaincontrollerconnectionstransport_3106 { get; set; }
	object Openflowmaincontrollerconnectionstransport { get; set; }
	object Openflowmaincontrollerconnectionscertificateid_3107 { get; set; }
	object Openflowmaincontrollerconnectionscertificateid { get; set; }
	object Openflowmaincontrollerconnectionssourceinterface_3108 { get; set; }
	object Openflowmaincontrollerconnectionssourceinterface { get; set; }
	object Openflowmaincontrollerconnectionsstate_3109 { get; set; }
	object Openflowmaincontrollerconnectionsstate { get; set; }
	object Openflowmaincontrollerconnectionsdisplaykey_3110 { get; set; }
	object Openflowmaincontrollerconnectionsdisplaykey { get; set; }
	object Openflowsecondcontrollerconnectionspolledpk_3201 { get; set; }
	object Openflowsecondcontrollerconnectionspolledpk { get; set; }
	object Openflowsecondcontrollerconnectionspolledauxiliaryid_3202 { get; set; }
	object Openflowsecondcontrollerconnectionspolledauxiliaryid { get; set; }
	object Openflowsecondcontrollerconnectionspolledpriority_3203 { get; set; }
	object Openflowsecondcontrollerconnectionspolledpriority { get; set; }
	object Openflowsecondcontrollerconnectionspolledipaddress_3204 { get; set; }
	object Openflowsecondcontrollerconnectionspolledipaddress { get; set; }
	object Openflowsecondcontrollerconnectionspolledport_3205 { get; set; }
	object Openflowsecondcontrollerconnectionspolledport { get; set; }
	object Openflowsecondcontrollerconnectionspolledtransport_3206 { get; set; }
	object Openflowsecondcontrollerconnectionspolledtransport { get; set; }
	object Openflowsecondcontrollerconnectionspolledcertificateid_3207 { get; set; }
	object Openflowsecondcontrollerconnectionspolledcertificateid { get; set; }
	object Openflowsecondcontrollerconnectionspolledsourceinterface_3208 { get; set; }
	object Openflowsecondcontrollerconnectionspolledsourceinterface { get; set; }
	object Openflowsecondcontrollerconnectionspolledstate_3209 { get; set; }
	object Openflowsecondcontrollerconnectionspolledstate { get; set; }
	object Openflowsecondcontrollerconnectionspolleddisplaykey_3210 { get; set; }
	object Openflowsecondcontrollerconnectionspolleddisplaykey { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedpk_3301 { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedpk { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedauxiliaryid_3302 { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedauxiliaryid { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedpriority_3303 { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedpriority { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedipaddress_3304 { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedipaddress { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedport_3305 { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedport { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedtransport_3306 { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedtransport { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedcertificateid_3307 { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedcertificateid { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedsourceinterface_3308 { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedsourceinterface { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedstate_3309 { get; set; }
	object Openflowsecondcontrollerconnectionssubscribedstate { get; set; }
	object Openflowsecondcontrollerconnectionssubscribeddisplaykey_3310 { get; set; }
	object Openflowsecondcontrollerconnectionssubscribeddisplaykey { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 500</summary>
	public CapabilitiesmodelstableQActionTable capabilitiesmodelstable { get; set; }
	/// <summary>PID: 2000</summary>
	public InterfacesstateQActionTable interfacesstate { get; set; }
	/// <summary>PID: 3100</summary>
	public OpenflowmaincontrollerconnectionsQActionTable openflowmaincontrollerconnections { get; set; }
	/// <summary>PID: 3200</summary>
	public OpenflowsecondcontrollerconnectionspolledQActionTable openflowsecondcontrollerconnectionspolled { get; set; }
	/// <summary>PID: 3300</summary>
	public OpenflowsecondcontrollerconnectionssubscribedQActionTable openflowsecondcontrollerconnectionssubscribed { get; set; }
	/// <summary>PID: 2  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Afterstartup_2 {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 2  | Type: read</summary>
	public System.Object Afterstartup {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 3  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollunsubscribeddata_3 {get { return GetParameter(3); }set { SetParameter(3, value); }}
	/// <summary>PID: 3  | Type: read</summary>
	public System.Object Pollunsubscribeddata {get { return GetParameter(3); }set { SetParameter(3, value); }}
	/// <summary>PID: 10  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Datasourceip_10 {get { return GetParameter(10); }set { SetParameter(10, value); }}
	/// <summary>PID: 10  | Type: read</summary>
	public System.Object Datasourceip {get { return GetParameter(10); }set { SetParameter(10, value); }}
	/// <summary>PID: 11  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Datasourceip_11 {get { return GetParameter(11); }set { SetParameter(11, value); }}
	/// <summary>PID: 12  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Datasourceport_12 {get { return GetParameter(12); }set { SetParameter(12, value); }}
	/// <summary>PID: 12  | Type: read</summary>
	public System.Object Datasourceport {get { return GetParameter(12); }set { SetParameter(12, value); }}
	/// <summary>PID: 13  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Datasourceport_13 {get { return GetParameter(13); }set { SetParameter(13, value); }}
	/// <summary>PID: 14  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Datasourceusername_14 {get { return GetParameter(14); }set { SetParameter(14, value); }}
	/// <summary>PID: 14  | Type: read</summary>
	public System.Object Datasourceusername {get { return GetParameter(14); }set { SetParameter(14, value); }}
	/// <summary>PID: 15  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Datasourceusername_15 {get { return GetParameter(15); }set { SetParameter(15, value); }}
	/// <summary>PID: 16  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Datasourcepassword_16 {get { return GetParameter(16); }set { SetParameter(16, value); }}
	/// <summary>PID: 16  | Type: read</summary>
	public System.Object Datasourcepassword {get { return GetParameter(16); }set { SetParameter(16, value); }}
	/// <summary>PID: 17  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Datasourcepassword_17 {get { return GetParameter(17); }set { SetParameter(17, value); }}
	/// <summary>PID: 18  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Clientcertificate_18 {get { return GetParameter(18); }set { SetParameter(18, value); }}
	/// <summary>PID: 18  | Type: read</summary>
	public System.Object Clientcertificate {get { return GetParameter(18); }set { SetParameter(18, value); }}
	/// <summary>PID: 19  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Clientcertificate_19 {get { return GetParameter(19); }set { SetParameter(19, value); }}
	/// <summary>PID: 22  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Grpcconnectionstate_22 {get { return GetParameter(22); }set { SetParameter(22, value); }}
	/// <summary>PID: 22  | Type: read</summary>
	public System.Object Grpcconnectionstate {get { return GetParameter(22); }set { SetParameter(22, value); }}
	/// <summary>PID: 102  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Gnmiversion_102 {get { return GetParameter(102); }set { SetParameter(102, value); }}
	/// <summary>PID: 102  | Type: read</summary>
	public System.Object Gnmiversion {get { return GetParameter(102); }set { SetParameter(102, value); }}
	/// <summary>PID: 406  | Type: read | EXCEPTIONS: N/A = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Systemstatecurrentdatetime_406 {get { return GetParameter(406); }set { SetParameter(406, value); }}
	/// <summary>PID: 406  | Type: read | EXCEPTIONS: N/A = 0</summary>
	public System.Object Systemstatecurrentdatetime {get { return GetParameter(406); }set { SetParameter(406, value); }}
	/// <summary>PID: 408  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Systemstateloginbanner_408 {get { return GetParameter(408); }set { SetParameter(408, value); }}
	/// <summary>PID: 408  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Systemstateloginbanner {get { return GetParameter(408); }set { SetParameter(408, value); }}
	/// <summary>PID: 409  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Systemstateloginbanner_409 {get { return GetParameter(409); }set { SetParameter(409, value); }}
	/// <summary>PID: 410  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Systemstatemotdbanner_410 {get { return GetParameter(410); }set { SetParameter(410, value); }}
	/// <summary>PID: 410  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Systemstatemotdbanner {get { return GetParameter(410); }set { SetParameter(410, value); }}
	/// <summary>PID: 411  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Systemstatemotdbanner_411 {get { return GetParameter(411); }set { SetParameter(411, value); }}
	/// <summary>PID: 501  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Capabilitiesmodelstablekey_501 {get { return GetParameter(501); }set { SetParameter(501, value); }}
	/// <summary>PID: 501  | Type: read</summary>
	public System.Object Capabilitiesmodelstablekey {get { return GetParameter(501); }set { SetParameter(501, value); }}
	/// <summary>PID: 502  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Capabilitiesmodelstablename_502 {get { return GetParameter(502); }set { SetParameter(502, value); }}
	/// <summary>PID: 502  | Type: read</summary>
	public System.Object Capabilitiesmodelstablename {get { return GetParameter(502); }set { SetParameter(502, value); }}
	/// <summary>PID: 503  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Capabilitiesmodelstableversion_503 {get { return GetParameter(503); }set { SetParameter(503, value); }}
	/// <summary>PID: 503  | Type: read</summary>
	public System.Object Capabilitiesmodelstableversion {get { return GetParameter(503); }set { SetParameter(503, value); }}
	/// <summary>PID: 504  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Capabilitiesmodelstableorganization_504 {get { return GetParameter(504); }set { SetParameter(504, value); }}
	/// <summary>PID: 504  | Type: read</summary>
	public System.Object Capabilitiesmodelstableorganization {get { return GetParameter(504); }set { SetParameter(504, value); }}
	/// <summary>PID: 2001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatename_2001 {get { return GetParameter(2001); }set { SetParameter(2001, value); }}
	/// <summary>PID: 2001  | Type: read</summary>
	public System.Object Interfacesstatename {get { return GetParameter(2001); }set { SetParameter(2001, value); }}
	/// <summary>PID: 2002  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatetype_2002 {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2002  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstatetype {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2003  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatemtu_2003 {get { return GetParameter(2003); }set { SetParameter(2003, value); }}
	/// <summary>PID: 2003  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstatemtu {get { return GetParameter(2003); }set { SetParameter(2003, value); }}
	/// <summary>PID: 2004  | Type: read | DISCREETS: Disabled = 0, Enabled = 1 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateloopbackmode_2004 {get { return GetParameter(2004); }set { SetParameter(2004, value); }}
	/// <summary>PID: 2004  | Type: read | DISCREETS: Disabled = 0, Enabled = 1 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateloopbackmode {get { return GetParameter(2004); }set { SetParameter(2004, value); }}
	/// <summary>PID: 2005  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatedescription_2005 {get { return GetParameter(2005); }set { SetParameter(2005, value); }}
	/// <summary>PID: 2005  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstatedescription {get { return GetParameter(2005); }set { SetParameter(2005, value); }}
	/// <summary>PID: 2006  | Type: read | DISCREETS: Disabled = 0, Enabled = 1 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatestate_2006 {get { return GetParameter(2006); }set { SetParameter(2006, value); }}
	/// <summary>PID: 2006  | Type: read | DISCREETS: Disabled = 0, Enabled = 1 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstatestate {get { return GetParameter(2006); }set { SetParameter(2006, value); }}
	/// <summary>PID: 2007  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateifindex_2007 {get { return GetParameter(2007); }set { SetParameter(2007, value); }}
	/// <summary>PID: 2007  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateifindex {get { return GetParameter(2007); }set { SetParameter(2007, value); }}
	/// <summary>PID: 2008  | Type: read | DISCREETS: Up = 0, Down = 1, Testing = 2 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateadminstatus_2008 {get { return GetParameter(2008); }set { SetParameter(2008, value); }}
	/// <summary>PID: 2008  | Type: read | DISCREETS: Up = 0, Down = 1, Testing = 2 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateadminstatus {get { return GetParameter(2008); }set { SetParameter(2008, value); }}
	/// <summary>PID: 2009  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3, Unknown = 4, Dormant = 5, Not Present = 6, Lower Layer Down = 7 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoperstatus_2009 {get { return GetParameter(2009); }set { SetParameter(2009, value); }}
	/// <summary>PID: 2009  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3, Unknown = 4, Dormant = 5, Not Present = 6, Lower Layer Down = 7 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateoperstatus {get { return GetParameter(2009); }set { SetParameter(2009, value); }}
	/// <summary>PID: 2010  | Type: read | EXCEPTIONS: N/A = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatelastchange_2010 {get { return GetParameter(2010); }set { SetParameter(2010, value); }}
	/// <summary>PID: 2010  | Type: read | EXCEPTIONS: N/A = 0</summary>
	public System.Object Interfacesstatelastchange {get { return GetParameter(2010); }set { SetParameter(2010, value); }}
	/// <summary>PID: 2011  | Type: read | DISCREETS: False = 0, True = 1 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatelogical_2011 {get { return GetParameter(2011); }set { SetParameter(2011, value); }}
	/// <summary>PID: 2011  | Type: read | DISCREETS: False = 0, True = 1 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstatelogical {get { return GetParameter(2011); }set { SetParameter(2011, value); }}
	/// <summary>PID: 2012  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinoctets_2012 {get { return GetParameter(2012); }set { SetParameter(2012, value); }}
	/// <summary>PID: 2012  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateinoctets {get { return GetParameter(2012); }set { SetParameter(2012, value); }}
	/// <summary>PID: 2013  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinpckts_2013 {get { return GetParameter(2013); }set { SetParameter(2013, value); }}
	/// <summary>PID: 2013  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateinpckts {get { return GetParameter(2013); }set { SetParameter(2013, value); }}
	/// <summary>PID: 2014  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinunicastpckts_2014 {get { return GetParameter(2014); }set { SetParameter(2014, value); }}
	/// <summary>PID: 2014  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateinunicastpckts {get { return GetParameter(2014); }set { SetParameter(2014, value); }}
	/// <summary>PID: 2015  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinbroadcastpckts_2015 {get { return GetParameter(2015); }set { SetParameter(2015, value); }}
	/// <summary>PID: 2015  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateinbroadcastpckts {get { return GetParameter(2015); }set { SetParameter(2015, value); }}
	/// <summary>PID: 2016  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinmulticastpckts_2016 {get { return GetParameter(2016); }set { SetParameter(2016, value); }}
	/// <summary>PID: 2016  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateinmulticastpckts {get { return GetParameter(2016); }set { SetParameter(2016, value); }}
	/// <summary>PID: 2017  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateindiscards_2017 {get { return GetParameter(2017); }set { SetParameter(2017, value); }}
	/// <summary>PID: 2017  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateindiscards {get { return GetParameter(2017); }set { SetParameter(2017, value); }}
	/// <summary>PID: 2018  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinerrors_2018 {get { return GetParameter(2018); }set { SetParameter(2018, value); }}
	/// <summary>PID: 2018  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateinerrors {get { return GetParameter(2018); }set { SetParameter(2018, value); }}
	/// <summary>PID: 2019  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinunknownprotos_2019 {get { return GetParameter(2019); }set { SetParameter(2019, value); }}
	/// <summary>PID: 2019  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateinunknownprotos {get { return GetParameter(2019); }set { SetParameter(2019, value); }}
	/// <summary>PID: 2020  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinfcserrors_2020 {get { return GetParameter(2020); }set { SetParameter(2020, value); }}
	/// <summary>PID: 2020  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateinfcserrors {get { return GetParameter(2020); }set { SetParameter(2020, value); }}
	/// <summary>PID: 2021  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutoctets_2021 {get { return GetParameter(2021); }set { SetParameter(2021, value); }}
	/// <summary>PID: 2021  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateoutoctets {get { return GetParameter(2021); }set { SetParameter(2021, value); }}
	/// <summary>PID: 2022  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutpckts_2022 {get { return GetParameter(2022); }set { SetParameter(2022, value); }}
	/// <summary>PID: 2022  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateoutpckts {get { return GetParameter(2022); }set { SetParameter(2022, value); }}
	/// <summary>PID: 2023  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutunicastpckts_2023 {get { return GetParameter(2023); }set { SetParameter(2023, value); }}
	/// <summary>PID: 2023  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateoutunicastpckts {get { return GetParameter(2023); }set { SetParameter(2023, value); }}
	/// <summary>PID: 2024  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutbroadcastpckts_2024 {get { return GetParameter(2024); }set { SetParameter(2024, value); }}
	/// <summary>PID: 2024  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateoutbroadcastpckts {get { return GetParameter(2024); }set { SetParameter(2024, value); }}
	/// <summary>PID: 2025  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutmulticastpckts_2025 {get { return GetParameter(2025); }set { SetParameter(2025, value); }}
	/// <summary>PID: 2025  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateoutmulticastpckts {get { return GetParameter(2025); }set { SetParameter(2025, value); }}
	/// <summary>PID: 2026  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutdiscards_2026 {get { return GetParameter(2026); }set { SetParameter(2026, value); }}
	/// <summary>PID: 2026  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateoutdiscards {get { return GetParameter(2026); }set { SetParameter(2026, value); }}
	/// <summary>PID: 2027  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateouterrors_2027 {get { return GetParameter(2027); }set { SetParameter(2027, value); }}
	/// <summary>PID: 2027  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateouterrors {get { return GetParameter(2027); }set { SetParameter(2027, value); }}
	/// <summary>PID: 2028  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatecarriertransitions_2028 {get { return GetParameter(2028); }set { SetParameter(2028, value); }}
	/// <summary>PID: 2028  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstatecarriertransitions {get { return GetParameter(2028); }set { SetParameter(2028, value); }}
	/// <summary>PID: 2029  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatelastclear_2029 {get { return GetParameter(2029); }set { SetParameter(2029, value); }}
	/// <summary>PID: 2029  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstatelastclear {get { return GetParameter(2029); }set { SetParameter(2029, value); }}
	/// <summary>PID: 2030  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatedisplaykey_2030 {get { return GetParameter(2030); }set { SetParameter(2030, value); }}
	/// <summary>PID: 2030  | Type: read</summary>
	public System.Object Interfacesstatedisplaykey {get { return GetParameter(2030); }set { SetParameter(2030, value); }}
	/// <summary>PID: 2031  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinbitrate_2031 {get { return GetParameter(2031); }set { SetParameter(2031, value); }}
	/// <summary>PID: 2031  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateinbitrate {get { return GetParameter(2031); }set { SetParameter(2031, value); }}
	/// <summary>PID: 2032  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutbitrate_2032 {get { return GetParameter(2032); }set { SetParameter(2032, value); }}
	/// <summary>PID: 2032  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateoutbitrate {get { return GetParameter(2032); }set { SetParameter(2032, value); }}
	/// <summary>PID: 2033  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinerrorrate_2033 {get { return GetParameter(2033); }set { SetParameter(2033, value); }}
	/// <summary>PID: 2033  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateinerrorrate {get { return GetParameter(2033); }set { SetParameter(2033, value); }}
	/// <summary>PID: 2034  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateouterrorrate_2034 {get { return GetParameter(2034); }set { SetParameter(2034, value); }}
	/// <summary>PID: 2034  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Interfacesstateouterrorrate {get { return GetParameter(2034); }set { SetParameter(2034, value); }}
	/// <summary>PID: 3000  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowdatapathid_3000 {get { return GetParameter(3000); }set { SetParameter(3000, value); }}
	/// <summary>PID: 3000  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowdatapathid {get { return GetParameter(3000); }set { SetParameter(3000, value); }}
	/// <summary>PID: 3001  | Type: read | DISCREETS: Secure = 1, Standalone = 2 | EXCEPTIONS: N/A = -1, Unresolvable = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowfailuremode_3001 {get { return GetParameter(3001); }set { SetParameter(3001, value); }}
	/// <summary>PID: 3001  | Type: read | DISCREETS: Secure = 1, Standalone = 2 | EXCEPTIONS: N/A = -1, Unresolvable = -2</summary>
	public System.Object Openflowfailuremode {get { return GetParameter(3001); }set { SetParameter(3001, value); }}
	/// <summary>PID: 3002  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowbackoffinterval_3002 {get { return GetParameter(3002); }set { SetParameter(3002, value); }}
	/// <summary>PID: 3002  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowbackoffinterval {get { return GetParameter(3002); }set { SetParameter(3002, value); }}
	/// <summary>PID: 3003  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaxbackoff_3003 {get { return GetParameter(3003); }set { SetParameter(3003, value); }}
	/// <summary>PID: 3003  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowmaxbackoff {get { return GetParameter(3003); }set { SetParameter(3003, value); }}
	/// <summary>PID: 3004  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowinactivityprobe_3004 {get { return GetParameter(3004); }set { SetParameter(3004, value); }}
	/// <summary>PID: 3004  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowinactivityprobe {get { return GetParameter(3004); }set { SetParameter(3004, value); }}
	/// <summary>PID: 3101  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionspk_3101 {get { return GetParameter(3101); }set { SetParameter(3101, value); }}
	/// <summary>PID: 3101  | Type: read</summary>
	public System.Object Openflowmaincontrollerconnectionspk {get { return GetParameter(3101); }set { SetParameter(3101, value); }}
	/// <summary>PID: 3102  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionsauxiliaryid_3102 {get { return GetParameter(3102); }set { SetParameter(3102, value); }}
	/// <summary>PID: 3102  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowmaincontrollerconnectionsauxiliaryid {get { return GetParameter(3102); }set { SetParameter(3102, value); }}
	/// <summary>PID: 3103  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionspriority_3103 {get { return GetParameter(3103); }set { SetParameter(3103, value); }}
	/// <summary>PID: 3103  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowmaincontrollerconnectionspriority {get { return GetParameter(3103); }set { SetParameter(3103, value); }}
	/// <summary>PID: 3104  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionsipaddress_3104 {get { return GetParameter(3104); }set { SetParameter(3104, value); }}
	/// <summary>PID: 3104  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowmaincontrollerconnectionsipaddress {get { return GetParameter(3104); }set { SetParameter(3104, value); }}
	/// <summary>PID: 3105  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionsport_3105 {get { return GetParameter(3105); }set { SetParameter(3105, value); }}
	/// <summary>PID: 3105  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowmaincontrollerconnectionsport {get { return GetParameter(3105); }set { SetParameter(3105, value); }}
	/// <summary>PID: 3106  | Type: read | DISCREETS: TCP = 1, TLS = 2 | EXCEPTIONS: N/A = -1, Unresolvable = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionstransport_3106 {get { return GetParameter(3106); }set { SetParameter(3106, value); }}
	/// <summary>PID: 3106  | Type: read | DISCREETS: TCP = 1, TLS = 2 | EXCEPTIONS: N/A = -1, Unresolvable = -2</summary>
	public System.Object Openflowmaincontrollerconnectionstransport {get { return GetParameter(3106); }set { SetParameter(3106, value); }}
	/// <summary>PID: 3107  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionscertificateid_3107 {get { return GetParameter(3107); }set { SetParameter(3107, value); }}
	/// <summary>PID: 3107  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowmaincontrollerconnectionscertificateid {get { return GetParameter(3107); }set { SetParameter(3107, value); }}
	/// <summary>PID: 3108  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionssourceinterface_3108 {get { return GetParameter(3108); }set { SetParameter(3108, value); }}
	/// <summary>PID: 3108  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowmaincontrollerconnectionssourceinterface {get { return GetParameter(3108); }set { SetParameter(3108, value); }}
	/// <summary>PID: 3109  | Type: read | DISCREETS: Disconnected = 0, Connected = 1 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionsstate_3109 {get { return GetParameter(3109); }set { SetParameter(3109, value); }}
	/// <summary>PID: 3109  | Type: read | DISCREETS: Disconnected = 0, Connected = 1 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowmaincontrollerconnectionsstate {get { return GetParameter(3109); }set { SetParameter(3109, value); }}
	/// <summary>PID: 3110  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionsdisplaykey_3110 {get { return GetParameter(3110); }set { SetParameter(3110, value); }}
	/// <summary>PID: 3110  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowmaincontrollerconnectionsdisplaykey {get { return GetParameter(3110); }set { SetParameter(3110, value); }}
	/// <summary>PID: 3201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledpk_3201 {get { return GetParameter(3201); }set { SetParameter(3201, value); }}
	/// <summary>PID: 3201  | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledpk {get { return GetParameter(3201); }set { SetParameter(3201, value); }}
	/// <summary>PID: 3202  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledauxiliaryid_3202 {get { return GetParameter(3202); }set { SetParameter(3202, value); }}
	/// <summary>PID: 3202  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledauxiliaryid {get { return GetParameter(3202); }set { SetParameter(3202, value); }}
	/// <summary>PID: 3203  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledpriority_3203 {get { return GetParameter(3203); }set { SetParameter(3203, value); }}
	/// <summary>PID: 3203  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledpriority {get { return GetParameter(3203); }set { SetParameter(3203, value); }}
	/// <summary>PID: 3204  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledipaddress_3204 {get { return GetParameter(3204); }set { SetParameter(3204, value); }}
	/// <summary>PID: 3204  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledipaddress {get { return GetParameter(3204); }set { SetParameter(3204, value); }}
	/// <summary>PID: 3205  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledport_3205 {get { return GetParameter(3205); }set { SetParameter(3205, value); }}
	/// <summary>PID: 3205  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledport {get { return GetParameter(3205); }set { SetParameter(3205, value); }}
	/// <summary>PID: 3206  | Type: read | DISCREETS: TCP = 1, TLS = 2 | EXCEPTIONS: N/A = -1, Unresolvable = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledtransport_3206 {get { return GetParameter(3206); }set { SetParameter(3206, value); }}
	/// <summary>PID: 3206  | Type: read | DISCREETS: TCP = 1, TLS = 2 | EXCEPTIONS: N/A = -1, Unresolvable = -2</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledtransport {get { return GetParameter(3206); }set { SetParameter(3206, value); }}
	/// <summary>PID: 3207  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledcertificateid_3207 {get { return GetParameter(3207); }set { SetParameter(3207, value); }}
	/// <summary>PID: 3207  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledcertificateid {get { return GetParameter(3207); }set { SetParameter(3207, value); }}
	/// <summary>PID: 3208  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledsourceinterface_3208 {get { return GetParameter(3208); }set { SetParameter(3208, value); }}
	/// <summary>PID: 3208  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledsourceinterface {get { return GetParameter(3208); }set { SetParameter(3208, value); }}
	/// <summary>PID: 3209  | Type: read | DISCREETS: Disconnected = 0, Connected = 1 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledstate_3209 {get { return GetParameter(3209); }set { SetParameter(3209, value); }}
	/// <summary>PID: 3209  | Type: read | DISCREETS: Disconnected = 0, Connected = 1 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledstate {get { return GetParameter(3209); }set { SetParameter(3209, value); }}
	/// <summary>PID: 3210  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolleddisplaykey_3210 {get { return GetParameter(3210); }set { SetParameter(3210, value); }}
	/// <summary>PID: 3210  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionspolleddisplaykey {get { return GetParameter(3210); }set { SetParameter(3210, value); }}
	/// <summary>PID: 3301  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedpk_3301 {get { return GetParameter(3301); }set { SetParameter(3301, value); }}
	/// <summary>PID: 3301  | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedpk {get { return GetParameter(3301); }set { SetParameter(3301, value); }}
	/// <summary>PID: 3302  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedauxiliaryid_3302 {get { return GetParameter(3302); }set { SetParameter(3302, value); }}
	/// <summary>PID: 3302  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedauxiliaryid {get { return GetParameter(3302); }set { SetParameter(3302, value); }}
	/// <summary>PID: 3303  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedpriority_3303 {get { return GetParameter(3303); }set { SetParameter(3303, value); }}
	/// <summary>PID: 3303  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedpriority {get { return GetParameter(3303); }set { SetParameter(3303, value); }}
	/// <summary>PID: 3304  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedipaddress_3304 {get { return GetParameter(3304); }set { SetParameter(3304, value); }}
	/// <summary>PID: 3304  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedipaddress {get { return GetParameter(3304); }set { SetParameter(3304, value); }}
	/// <summary>PID: 3305  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedport_3305 {get { return GetParameter(3305); }set { SetParameter(3305, value); }}
	/// <summary>PID: 3305  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedport {get { return GetParameter(3305); }set { SetParameter(3305, value); }}
	/// <summary>PID: 3306  | Type: read | DISCREETS: TCP = 1, TLS = 2 | EXCEPTIONS: N/A = -1, Unresolvable = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedtransport_3306 {get { return GetParameter(3306); }set { SetParameter(3306, value); }}
	/// <summary>PID: 3306  | Type: read | DISCREETS: TCP = 1, TLS = 2 | EXCEPTIONS: N/A = -1, Unresolvable = -2</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedtransport {get { return GetParameter(3306); }set { SetParameter(3306, value); }}
	/// <summary>PID: 3307  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedcertificateid_3307 {get { return GetParameter(3307); }set { SetParameter(3307, value); }}
	/// <summary>PID: 3307  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedcertificateid {get { return GetParameter(3307); }set { SetParameter(3307, value); }}
	/// <summary>PID: 3308  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedsourceinterface_3308 {get { return GetParameter(3308); }set { SetParameter(3308, value); }}
	/// <summary>PID: 3308  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedsourceinterface {get { return GetParameter(3308); }set { SetParameter(3308, value); }}
	/// <summary>PID: 3309  | Type: read | DISCREETS: Disconnected = 0, Connected = 1 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedstate_3309 {get { return GetParameter(3309); }set { SetParameter(3309, value); }}
	/// <summary>PID: 3309  | Type: read | DISCREETS: Disconnected = 0, Connected = 1 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedstate {get { return GetParameter(3309); }set { SetParameter(3309, value); }}
	/// <summary>PID: 3310  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribeddisplaykey_3310 {get { return GetParameter(3310); }set { SetParameter(3310, value); }}
	/// <summary>PID: 3310  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribeddisplaykey {get { return GetParameter(3310); }set { SetParameter(3310, value); }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		capabilitiesmodelstable = new CapabilitiesmodelstableQActionTable(this, 500, "capabilitiesmodelstable");
		interfacesstate = new InterfacesstateQActionTable(this, 2000, "interfacesstate");
		openflowmaincontrollerconnections = new OpenflowmaincontrollerconnectionsQActionTable(this, 3100, "openflowmaincontrollerconnections");
		openflowsecondcontrollerconnectionspolled = new OpenflowsecondcontrollerconnectionspolledQActionTable(this, 3200, "openflowsecondcontrollerconnectionspolled");
		openflowsecondcontrollerconnectionssubscribed = new OpenflowsecondcontrollerconnectionssubscribedQActionTable(this, 3300, "openflowsecondcontrollerconnectionssubscribed");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class CapabilitiesmodelstableQActionTable : QActionTable, IEnumerable<CapabilitiesmodelstableQActionRow>
{
	public CapabilitiesmodelstableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<CapabilitiesmodelstableQActionRow> GetEnumerator() { return new QActionTableEnumerator<CapabilitiesmodelstableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class InterfacesstateQActionTable : QActionTable, IEnumerable<InterfacesstateQActionRow>
{
	public InterfacesstateQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<InterfacesstateQActionRow> GetEnumerator() { return new QActionTableEnumerator<InterfacesstateQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class OpenflowmaincontrollerconnectionsQActionTable : QActionTable, IEnumerable<OpenflowmaincontrollerconnectionsQActionRow>
{
	public OpenflowmaincontrollerconnectionsQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<OpenflowmaincontrollerconnectionsQActionRow> GetEnumerator() { return new QActionTableEnumerator<OpenflowmaincontrollerconnectionsQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class OpenflowsecondcontrollerconnectionspolledQActionTable : QActionTable, IEnumerable<OpenflowsecondcontrollerconnectionspolledQActionRow>
{
	public OpenflowsecondcontrollerconnectionspolledQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<OpenflowsecondcontrollerconnectionspolledQActionRow> GetEnumerator() { return new QActionTableEnumerator<OpenflowsecondcontrollerconnectionspolledQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class OpenflowsecondcontrollerconnectionssubscribedQActionTable : QActionTable, IEnumerable<OpenflowsecondcontrollerconnectionssubscribedQActionRow>
{
	public OpenflowsecondcontrollerconnectionssubscribedQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<OpenflowsecondcontrollerconnectionssubscribedQActionRow> GetEnumerator() { return new QActionTableEnumerator<OpenflowsecondcontrollerconnectionssubscribedQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class CapabilitiesmodelstableQActionRow : QActionTableRow
{
	/// <summary>PID: 501 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Capabilitiesmodelstablekey_501 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 501 | Type: read</summary>
	public System.Object Capabilitiesmodelstablekey { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 502 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Capabilitiesmodelstablename_502 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 502 | Type: read</summary>
	public System.Object Capabilitiesmodelstablename { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 503 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Capabilitiesmodelstableversion_503 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 503 | Type: read</summary>
	public System.Object Capabilitiesmodelstableversion { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 504 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Capabilitiesmodelstableorganization_504 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 504 | Type: read</summary>
	public System.Object Capabilitiesmodelstableorganization { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	public CapabilitiesmodelstableQActionRow() : base(0, 4) { }
	public CapabilitiesmodelstableQActionRow(System.Object[] oRow) : base(0, 4, oRow) { }
	public static implicit operator CapabilitiesmodelstableQActionRow(System.Object[] source) { return new CapabilitiesmodelstableQActionRow(source); }
	public static implicit operator System.Object[](CapabilitiesmodelstableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class InterfacesstateQActionRow : QActionTableRow
{
	/// <summary>PID: 2001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatename_2001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 2001 | Type: read</summary>
	public System.Object Interfacesstatename { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 2002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatetype_2002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 2002 | Type: read</summary>
	public System.Object Interfacesstatetype { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 2003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatemtu_2003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 2003 | Type: read</summary>
	public System.Object Interfacesstatemtu { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 2004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateloopbackmode_2004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 2004 | Type: read</summary>
	public System.Object Interfacesstateloopbackmode { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 2005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatedescription_2005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 2005 | Type: read</summary>
	public System.Object Interfacesstatedescription { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 2006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatestate_2006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 2006 | Type: read</summary>
	public System.Object Interfacesstatestate { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 2007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateifindex_2007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 2007 | Type: read</summary>
	public System.Object Interfacesstateifindex { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 2008 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateadminstatus_2008 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 2008 | Type: read</summary>
	public System.Object Interfacesstateadminstatus { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 2009 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoperstatus_2009 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 2009 | Type: read</summary>
	public System.Object Interfacesstateoperstatus { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 2010 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatelastchange_2010 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 2010 | Type: read</summary>
	public System.Object Interfacesstatelastchange { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 2011 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatelogical_2011 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 2011 | Type: read</summary>
	public System.Object Interfacesstatelogical { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 2012 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinoctets_2012 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 2012 | Type: read</summary>
	public System.Object Interfacesstateinoctets { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 2013 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinpckts_2013 { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 2013 | Type: read</summary>
	public System.Object Interfacesstateinpckts { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 2014 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinunicastpckts_2014 { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 2014 | Type: read</summary>
	public System.Object Interfacesstateinunicastpckts { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 2015 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinbroadcastpckts_2015 { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 2015 | Type: read</summary>
	public System.Object Interfacesstateinbroadcastpckts { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 2016 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinmulticastpckts_2016 { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	/// <summary>PID: 2016 | Type: read</summary>
	public System.Object Interfacesstateinmulticastpckts { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	/// <summary>PID: 2017 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateindiscards_2017 { get { if (base.Columns.ContainsKey(16)) { return base.Columns[16]; } else { return null; } } set { if (base.Columns.ContainsKey(16)) { base.Columns[16] = value; } else { base.Columns.Add(16, value); } } }
	/// <summary>PID: 2017 | Type: read</summary>
	public System.Object Interfacesstateindiscards { get { if (base.Columns.ContainsKey(16)) { return base.Columns[16]; } else { return null; } } set { if (base.Columns.ContainsKey(16)) { base.Columns[16] = value; } else { base.Columns.Add(16, value); } } }
	/// <summary>PID: 2018 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinerrors_2018 { get { if (base.Columns.ContainsKey(17)) { return base.Columns[17]; } else { return null; } } set { if (base.Columns.ContainsKey(17)) { base.Columns[17] = value; } else { base.Columns.Add(17, value); } } }
	/// <summary>PID: 2018 | Type: read</summary>
	public System.Object Interfacesstateinerrors { get { if (base.Columns.ContainsKey(17)) { return base.Columns[17]; } else { return null; } } set { if (base.Columns.ContainsKey(17)) { base.Columns[17] = value; } else { base.Columns.Add(17, value); } } }
	/// <summary>PID: 2019 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinunknownprotos_2019 { get { if (base.Columns.ContainsKey(18)) { return base.Columns[18]; } else { return null; } } set { if (base.Columns.ContainsKey(18)) { base.Columns[18] = value; } else { base.Columns.Add(18, value); } } }
	/// <summary>PID: 2019 | Type: read</summary>
	public System.Object Interfacesstateinunknownprotos { get { if (base.Columns.ContainsKey(18)) { return base.Columns[18]; } else { return null; } } set { if (base.Columns.ContainsKey(18)) { base.Columns[18] = value; } else { base.Columns.Add(18, value); } } }
	/// <summary>PID: 2020 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinfcserrors_2020 { get { if (base.Columns.ContainsKey(19)) { return base.Columns[19]; } else { return null; } } set { if (base.Columns.ContainsKey(19)) { base.Columns[19] = value; } else { base.Columns.Add(19, value); } } }
	/// <summary>PID: 2020 | Type: read</summary>
	public System.Object Interfacesstateinfcserrors { get { if (base.Columns.ContainsKey(19)) { return base.Columns[19]; } else { return null; } } set { if (base.Columns.ContainsKey(19)) { base.Columns[19] = value; } else { base.Columns.Add(19, value); } } }
	/// <summary>PID: 2021 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutoctets_2021 { get { if (base.Columns.ContainsKey(20)) { return base.Columns[20]; } else { return null; } } set { if (base.Columns.ContainsKey(20)) { base.Columns[20] = value; } else { base.Columns.Add(20, value); } } }
	/// <summary>PID: 2021 | Type: read</summary>
	public System.Object Interfacesstateoutoctets { get { if (base.Columns.ContainsKey(20)) { return base.Columns[20]; } else { return null; } } set { if (base.Columns.ContainsKey(20)) { base.Columns[20] = value; } else { base.Columns.Add(20, value); } } }
	/// <summary>PID: 2022 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutpckts_2022 { get { if (base.Columns.ContainsKey(21)) { return base.Columns[21]; } else { return null; } } set { if (base.Columns.ContainsKey(21)) { base.Columns[21] = value; } else { base.Columns.Add(21, value); } } }
	/// <summary>PID: 2022 | Type: read</summary>
	public System.Object Interfacesstateoutpckts { get { if (base.Columns.ContainsKey(21)) { return base.Columns[21]; } else { return null; } } set { if (base.Columns.ContainsKey(21)) { base.Columns[21] = value; } else { base.Columns.Add(21, value); } } }
	/// <summary>PID: 2023 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutunicastpckts_2023 { get { if (base.Columns.ContainsKey(22)) { return base.Columns[22]; } else { return null; } } set { if (base.Columns.ContainsKey(22)) { base.Columns[22] = value; } else { base.Columns.Add(22, value); } } }
	/// <summary>PID: 2023 | Type: read</summary>
	public System.Object Interfacesstateoutunicastpckts { get { if (base.Columns.ContainsKey(22)) { return base.Columns[22]; } else { return null; } } set { if (base.Columns.ContainsKey(22)) { base.Columns[22] = value; } else { base.Columns.Add(22, value); } } }
	/// <summary>PID: 2024 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutbroadcastpckts_2024 { get { if (base.Columns.ContainsKey(23)) { return base.Columns[23]; } else { return null; } } set { if (base.Columns.ContainsKey(23)) { base.Columns[23] = value; } else { base.Columns.Add(23, value); } } }
	/// <summary>PID: 2024 | Type: read</summary>
	public System.Object Interfacesstateoutbroadcastpckts { get { if (base.Columns.ContainsKey(23)) { return base.Columns[23]; } else { return null; } } set { if (base.Columns.ContainsKey(23)) { base.Columns[23] = value; } else { base.Columns.Add(23, value); } } }
	/// <summary>PID: 2025 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutmulticastpckts_2025 { get { if (base.Columns.ContainsKey(24)) { return base.Columns[24]; } else { return null; } } set { if (base.Columns.ContainsKey(24)) { base.Columns[24] = value; } else { base.Columns.Add(24, value); } } }
	/// <summary>PID: 2025 | Type: read</summary>
	public System.Object Interfacesstateoutmulticastpckts { get { if (base.Columns.ContainsKey(24)) { return base.Columns[24]; } else { return null; } } set { if (base.Columns.ContainsKey(24)) { base.Columns[24] = value; } else { base.Columns.Add(24, value); } } }
	/// <summary>PID: 2026 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutdiscards_2026 { get { if (base.Columns.ContainsKey(25)) { return base.Columns[25]; } else { return null; } } set { if (base.Columns.ContainsKey(25)) { base.Columns[25] = value; } else { base.Columns.Add(25, value); } } }
	/// <summary>PID: 2026 | Type: read</summary>
	public System.Object Interfacesstateoutdiscards { get { if (base.Columns.ContainsKey(25)) { return base.Columns[25]; } else { return null; } } set { if (base.Columns.ContainsKey(25)) { base.Columns[25] = value; } else { base.Columns.Add(25, value); } } }
	/// <summary>PID: 2027 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateouterrors_2027 { get { if (base.Columns.ContainsKey(26)) { return base.Columns[26]; } else { return null; } } set { if (base.Columns.ContainsKey(26)) { base.Columns[26] = value; } else { base.Columns.Add(26, value); } } }
	/// <summary>PID: 2027 | Type: read</summary>
	public System.Object Interfacesstateouterrors { get { if (base.Columns.ContainsKey(26)) { return base.Columns[26]; } else { return null; } } set { if (base.Columns.ContainsKey(26)) { base.Columns[26] = value; } else { base.Columns.Add(26, value); } } }
	/// <summary>PID: 2028 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatecarriertransitions_2028 { get { if (base.Columns.ContainsKey(27)) { return base.Columns[27]; } else { return null; } } set { if (base.Columns.ContainsKey(27)) { base.Columns[27] = value; } else { base.Columns.Add(27, value); } } }
	/// <summary>PID: 2028 | Type: read</summary>
	public System.Object Interfacesstatecarriertransitions { get { if (base.Columns.ContainsKey(27)) { return base.Columns[27]; } else { return null; } } set { if (base.Columns.ContainsKey(27)) { base.Columns[27] = value; } else { base.Columns.Add(27, value); } } }
	/// <summary>PID: 2029 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatelastclear_2029 { get { if (base.Columns.ContainsKey(28)) { return base.Columns[28]; } else { return null; } } set { if (base.Columns.ContainsKey(28)) { base.Columns[28] = value; } else { base.Columns.Add(28, value); } } }
	/// <summary>PID: 2029 | Type: read</summary>
	public System.Object Interfacesstatelastclear { get { if (base.Columns.ContainsKey(28)) { return base.Columns[28]; } else { return null; } } set { if (base.Columns.ContainsKey(28)) { base.Columns[28] = value; } else { base.Columns.Add(28, value); } } }
	/// <summary>PID: 2030 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstatedisplaykey_2030 { get { if (base.Columns.ContainsKey(29)) { return base.Columns[29]; } else { return null; } } set { if (base.Columns.ContainsKey(29)) { base.Columns[29] = value; } else { base.Columns.Add(29, value); } } }
	/// <summary>PID: 2030 | Type: read</summary>
	public System.Object Interfacesstatedisplaykey { get { if (base.Columns.ContainsKey(29)) { return base.Columns[29]; } else { return null; } } set { if (base.Columns.ContainsKey(29)) { base.Columns[29] = value; } else { base.Columns.Add(29, value); } } }
	/// <summary>PID: 2031 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinbitrate_2031 { get { if (base.Columns.ContainsKey(30)) { return base.Columns[30]; } else { return null; } } set { if (base.Columns.ContainsKey(30)) { base.Columns[30] = value; } else { base.Columns.Add(30, value); } } }
	/// <summary>PID: 2031 | Type: read</summary>
	public System.Object Interfacesstateinbitrate { get { if (base.Columns.ContainsKey(30)) { return base.Columns[30]; } else { return null; } } set { if (base.Columns.ContainsKey(30)) { base.Columns[30] = value; } else { base.Columns.Add(30, value); } } }
	/// <summary>PID: 2032 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateoutbitrate_2032 { get { if (base.Columns.ContainsKey(31)) { return base.Columns[31]; } else { return null; } } set { if (base.Columns.ContainsKey(31)) { base.Columns[31] = value; } else { base.Columns.Add(31, value); } } }
	/// <summary>PID: 2032 | Type: read</summary>
	public System.Object Interfacesstateoutbitrate { get { if (base.Columns.ContainsKey(31)) { return base.Columns[31]; } else { return null; } } set { if (base.Columns.ContainsKey(31)) { base.Columns[31] = value; } else { base.Columns.Add(31, value); } } }
	/// <summary>PID: 2033 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateinerrorrate_2033 { get { if (base.Columns.ContainsKey(32)) { return base.Columns[32]; } else { return null; } } set { if (base.Columns.ContainsKey(32)) { base.Columns[32] = value; } else { base.Columns.Add(32, value); } } }
	/// <summary>PID: 2033 | Type: read</summary>
	public System.Object Interfacesstateinerrorrate { get { if (base.Columns.ContainsKey(32)) { return base.Columns[32]; } else { return null; } } set { if (base.Columns.ContainsKey(32)) { base.Columns[32] = value; } else { base.Columns.Add(32, value); } } }
	/// <summary>PID: 2034 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesstateouterrorrate_2034 { get { if (base.Columns.ContainsKey(33)) { return base.Columns[33]; } else { return null; } } set { if (base.Columns.ContainsKey(33)) { base.Columns[33] = value; } else { base.Columns.Add(33, value); } } }
	/// <summary>PID: 2034 | Type: read</summary>
	public System.Object Interfacesstateouterrorrate { get { if (base.Columns.ContainsKey(33)) { return base.Columns[33]; } else { return null; } } set { if (base.Columns.ContainsKey(33)) { base.Columns[33] = value; } else { base.Columns.Add(33, value); } } }
	public InterfacesstateQActionRow() : base(0, 34) { }
	public InterfacesstateQActionRow(System.Object[] oRow) : base(0, 34, oRow) { }
	public static implicit operator InterfacesstateQActionRow(System.Object[] source) { return new InterfacesstateQActionRow(source); }
	public static implicit operator System.Object[](InterfacesstateQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class OpenflowmaincontrollerconnectionsQActionRow : QActionTableRow
{
	/// <summary>PID: 3101 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionspk_3101 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 3101 | Type: read</summary>
	public System.Object Openflowmaincontrollerconnectionspk { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 3102 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionsauxiliaryid_3102 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 3102 | Type: read</summary>
	public System.Object Openflowmaincontrollerconnectionsauxiliaryid { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 3103 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionspriority_3103 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 3103 | Type: read</summary>
	public System.Object Openflowmaincontrollerconnectionspriority { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 3104 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionsipaddress_3104 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 3104 | Type: read</summary>
	public System.Object Openflowmaincontrollerconnectionsipaddress { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 3105 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionsport_3105 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 3105 | Type: read</summary>
	public System.Object Openflowmaincontrollerconnectionsport { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 3106 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionstransport_3106 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 3106 | Type: read</summary>
	public System.Object Openflowmaincontrollerconnectionstransport { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 3107 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionscertificateid_3107 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 3107 | Type: read</summary>
	public System.Object Openflowmaincontrollerconnectionscertificateid { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 3108 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionssourceinterface_3108 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 3108 | Type: read</summary>
	public System.Object Openflowmaincontrollerconnectionssourceinterface { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 3109 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionsstate_3109 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 3109 | Type: read</summary>
	public System.Object Openflowmaincontrollerconnectionsstate { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 3110 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowmaincontrollerconnectionsdisplaykey_3110 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 3110 | Type: read</summary>
	public System.Object Openflowmaincontrollerconnectionsdisplaykey { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	public OpenflowmaincontrollerconnectionsQActionRow() : base(0, 10) { }
	public OpenflowmaincontrollerconnectionsQActionRow(System.Object[] oRow) : base(0, 10, oRow) { }
	public static implicit operator OpenflowmaincontrollerconnectionsQActionRow(System.Object[] source) { return new OpenflowmaincontrollerconnectionsQActionRow(source); }
	public static implicit operator System.Object[](OpenflowmaincontrollerconnectionsQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class OpenflowsecondcontrollerconnectionspolledQActionRow : QActionTableRow
{
	/// <summary>PID: 3201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledpk_3201 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 3201 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledpk { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 3202 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledauxiliaryid_3202 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 3202 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledauxiliaryid { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 3203 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledpriority_3203 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 3203 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledpriority { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 3204 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledipaddress_3204 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 3204 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledipaddress { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 3205 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledport_3205 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 3205 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledport { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 3206 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledtransport_3206 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 3206 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledtransport { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 3207 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledcertificateid_3207 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 3207 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledcertificateid { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 3208 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledsourceinterface_3208 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 3208 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledsourceinterface { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 3209 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolledstate_3209 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 3209 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionspolledstate { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 3210 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionspolleddisplaykey_3210 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 3210 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionspolleddisplaykey { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	public OpenflowsecondcontrollerconnectionspolledQActionRow() : base(0, 10) { }
	public OpenflowsecondcontrollerconnectionspolledQActionRow(System.Object[] oRow) : base(0, 10, oRow) { }
	public static implicit operator OpenflowsecondcontrollerconnectionspolledQActionRow(System.Object[] source) { return new OpenflowsecondcontrollerconnectionspolledQActionRow(source); }
	public static implicit operator System.Object[](OpenflowsecondcontrollerconnectionspolledQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class OpenflowsecondcontrollerconnectionssubscribedQActionRow : QActionTableRow
{
	/// <summary>PID: 3301 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedpk_3301 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 3301 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedpk { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 3302 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedauxiliaryid_3302 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 3302 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedauxiliaryid { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 3303 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedpriority_3303 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 3303 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedpriority { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 3304 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedipaddress_3304 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 3304 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedipaddress { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 3305 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedport_3305 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 3305 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedport { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 3306 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedtransport_3306 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 3306 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedtransport { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 3307 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedcertificateid_3307 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 3307 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedcertificateid { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 3308 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedsourceinterface_3308 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 3308 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedsourceinterface { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 3309 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribedstate_3309 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 3309 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribedstate { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 3310 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Openflowsecondcontrollerconnectionssubscribeddisplaykey_3310 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 3310 | Type: read</summary>
	public System.Object Openflowsecondcontrollerconnectionssubscribeddisplaykey { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	public OpenflowsecondcontrollerconnectionssubscribedQActionRow() : base(0, 10) { }
	public OpenflowsecondcontrollerconnectionssubscribedQActionRow(System.Object[] oRow) : base(0, 10, oRow) { }
	public static implicit operator OpenflowsecondcontrollerconnectionssubscribedQActionRow(System.Object[] source) { return new OpenflowsecondcontrollerconnectionssubscribedQActionRow(source); }
	public static implicit operator System.Object[](OpenflowsecondcontrollerconnectionssubscribedQActionRow source) { return source.ToObjectArray(); }
}
}
